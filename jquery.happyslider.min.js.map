{"version":3,"sources":["jquery.happyslider.js"],"names":[],"mappings":"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","file":"jquery.happyslider.min.js","sourcesContent":["/* ========================================================================\r\n * HappySlider: happyslider.js v1.3\r\n * ========================================================================\r\n * Copyright 2013 Happycms.ru\r\n * Licensed under the MIT license.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n * ======================================================================== \r\n */\r\n\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define('happyslider', ['jquery'], factory);\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n\r\n    // Create the defaults once\r\n    var happyslider = \"happyslider\",\r\n        defaults = {\r\n            width: 'auto',\r\n            height: 'auto',\r\n            fullscreen: false,\r\n            infiniti: false, \r\n            swipe: true,\r\n            autoHeight: false,\r\n            animateType: 'slide', /* slide, fade, scale */\r\n            animateDuration: 300,\r\n            animateEase: 'ease', /* css3 timing-function */\r\n            animateCallback: function($el){\r\n            },\r\n        };\r\n\r\n    function Plugin( element, options ) {\r\n        this.element = element;\r\n\r\n        this.$element = $(this.element);\r\n        this.$container = $(this.element).find('.js__happyslider-container');\r\n        this.$wrap = $(this.element).find('.js__happyslider-wrap');\r\n        this.$item = $(this.element).find('.js__happyslider-item');\r\n        this.$previous = $(this.element).find('.js__happyslider-previous');\r\n        this.$next = $(this.element).find('.js__happyslider-next');\r\n        this.container = '.js__happyslider-container';\r\n        this.wrap = '.js__happyslider-wrap';\r\n        this.item = '.js__happyslider-item';\r\n        this.previous = '.js__happyslider-previous';\r\n        this.next = '.js__happyslider-next';\r\n        this.isAnimate = false;\r\n        this.isMouseUp = false,\r\n        this.isMouseDown = false;\r\n        this.touchDistance = 0;\r\n        this.startPos = 0;\r\n        this.slideIndex = 0;  \r\n        this.itemSize = [];\r\n\r\n        this.oldie = false;\r\n        if(isIE() <= 9 && isIE() !== false){\r\n            this.oldie = true;\r\n        }\r\n        \r\n        this.options = $.extend( {\r\n        }, defaults, options, $(this.element).data('happyslider-options')) ;\r\n\r\n        this._defaults = defaults;\r\n        this._name = happyslider;\r\n        \r\n        this.init();\r\n\r\n        this.slide = this.slide;\r\n\r\n        this.bindMethods();\r\n        this.bindEventListeners();\r\n    }\r\n\r\n    Plugin.prototype = {\r\n\r\n        init: function() {\r\n            if(this.options.animateType == 'slide'){\r\n                $(this.element).attr('data-happyslider-animatetype', 'slide');        \r\n            }\r\n                \r\n            if(this.options.animateType == 'fade'){\r\n                $(this.element).attr('data-happyslider-animatetype', 'fade');        \r\n            }\r\n            \r\n            if(this.options.animateType == 'scale'){\r\n                $(this.element).attr('data-happyslider-animatetype', 'scale');        \r\n            }\r\n            \r\n            this.render();    \r\n        },\r\n\r\n        render: function() {\r\n            this.draw();\r\n            \r\n            if(!this.$item.is('.active')){\r\n                this.$item.eq(0).addClass('active');    \r\n            }\r\n            \r\n            if(!this.options.infiniti || this.slideIndex == 0){\r\n                this.$element.find(this.previous).addClass('dissable');\r\n            }    \r\n        },\r\n        \r\n        draw: function() {\r\n            if(this.options.fullscreen){\r\n                this.options.width = $(window).width();\r\n                this.options.height = $(window).height();                \r\n            }\r\n            \r\n            if(this.options.autoHeight){ \r\n                this.$item.eq(this.slideIndex).css('height', 'auto');\r\n                this.options.height = this.$item.eq(this.slideIndex)[0].scrollHeight;  \r\n            }\r\n            \r\n            this.$element.css('width', this.options.width).css('height', this.options.height);\r\n        },\r\n        \r\n        slide: function(index) {\r\n            this.slideIndex = index || this.slideIndex;\r\n\r\n            if(this.isAnimate){\r\n                return false;\r\n            }\r\n                        \r\n            this.isAnimate = true;\r\n            \r\n            var that = this;\r\n            \r\n            if(this.slideIndex == 'undefined'){\r\n                this.slideIndex = this.$item.index(this.$item.filter('.active'));\r\n            }\r\n            \r\n            this.$item.css('transition', 'all ' + this.options.animateDuration + 'ms ' + this.options.animateEase);\r\n                \r\n            if(this.options.animateType == 'slide'){\r\n                this.animationSlide();\r\n            }\r\n            \r\n            if(this.options.animateType == 'fade'){\r\n                this.animationFade();    \r\n            }\r\n            \r\n            if(this.options.animateType == 'scale'){\r\n                this.animationScale();    \r\n            }\r\n            \r\n            if(!this.options.infiniti && this.slideIndex >= this.$item.length - 1){\r\n                this.$element.find(this.next).addClass('dissable');\r\n            }else{\r\n                this.$element.find(this.next).removeClass('dissable');    \r\n            }\r\n            \r\n            if(!this.options.infiniti && this.slideIndex <= 0){\r\n                this.$element.find(this.previous).addClass('dissable');\r\n            }else{\r\n                this.$element.find(this.previous).removeClass('dissable');    \r\n            }\r\n            \r\n            setTimeout(function(){\r\n                that.isAnimate = false;\r\n                that.$item.removeClass('active');\r\n                that.$item.eq(that.slideIndex).addClass('active');\r\n                that.$item.css('transition', 'none');\r\n                that.$element.find(that.previous).removeClass('active');\r\n                that.$element.find(that.next).removeClass('active');                \r\n                \r\n                that.animationScaleCallback();\r\n                that.options.animateCallback();\r\n                that.draw();    \r\n            }, that.options.animateDuration);            \r\n        },\r\n        \r\n        animationSlide: function(){\r\n            var itemWidth = this.$item.width()\r\n            ,   top = 0\r\n            ,   left = - itemWidth * this.slideIndex\r\n            \r\n            if(typeof Modernizr != 'undefined' && Modernizr.csstransforms3d && Modernizr.csstransitions){\r\n                this.$item.css('transform' , 'translate3d('+left+'px,'+top+'px, 0px)');    \r\n            }\r\n                \r\n            else if(typeof Modernizr != 'undefined' && Modernizr.csstransforms && Modernizr.csstransitions){\r\n                this.$item.css('transform' , 'translate('+left+'px,'+top+'px)');   \r\n            } \r\n                \r\n            else if(typeof Modernizr != 'undefined' && Modernizr.csstransitions){\r\n                this.$item.css('left' , left).css('top' , top);                       \r\n            }  \r\n                \r\n            else{\r\n                this.$item.stop().animate({'left' : left, 'top' : top}, this.options.animateDuration, 'swing', function(){\r\n                });  \r\n            }                 \r\n        },\r\n        \r\n        animationFade: function(){\r\n            this.$item.css('opacity', 0);\r\n            this.$item.eq(this.slideIndex).css('opacity', 1);            \r\n        },\r\n        \r\n        animationScale: function(){\r\n            var that = this;\r\n            \r\n            if(typeof Modernizr != 'undefined' && Modernizr.csstransforms && Modernizr.csstransitions){\r\n                this.$item.filter('.active').css('transform' , 'scale(0, 0)').css('opacity', 0); \r\n                this.$item.eq(this.slideIndex).css('transform' , 'scale(1, 1)').css('opacity', 1);                  \r\n            }           \r\n        },\r\n        \r\n        animationScaleCallback: function(){\r\n            if(this.options.animateType == 'scale'){\r\n                this.$item.not('.active').css('transform' , 'scale(0, 0)').css('opacity', 0);   \r\n            }\r\n        },\r\n        \r\n        touchmove: function(position){\r\n            var itemLength = this.$item.length\r\n            ,   itemWidth = this.$item.width()\r\n            ,   slideIndex = this.$item.index(this.$item.filter('.active'))\r\n            ,   offsetRight\r\n            ,   offsetLeft\r\n            ,   top = 0\r\n            ,   left = - itemWidth * slideIndex\r\n            ;  \r\n            \r\n            this.$item.css('transition', 'none');\r\n            \r\n            position.x = position.x - this.$element.position().left;\r\n            position.y = position.y - this.$element.position().top;\r\n            \r\n            left = left + this.touchDistance;\r\n            offsetRight = (itemWidth * (slideIndex+1) - itemWidth * 0.75) * -1;\r\n            offsetLeft = (itemWidth * slideIndex - itemWidth * 0.25) * -1;\r\n\r\n            \r\n            if(typeof Modernizr != 'undefined' && Modernizr.csstransforms3d){\r\n                this.$item.css('transform' , 'translate3d('+left+'px,'+top+'px, 0px)');    \r\n            }        \r\n            \r\n            else if(typeof Modernizr != 'undefined' && Modernizr.csstransforms && !this.oldie){\r\n                this.$item.css('transform' , 'translate('+left+'px,'+top+'px)');   \r\n            } \r\n                \r\n            else{\r\n                this.$item.css('left' , left).css('top' , top);                       \r\n            } \r\n            \r\n            if(this.touchDistance < 0 && slideIndex >= 0 && slideIndex < itemLength - 1 && left < offsetRight){\r\n                this.$element.find(this.next).addClass('active');\r\n                return slideIndex + 1;\r\n            }else{\r\n                this.$element.find(this.next).removeClass('active');    \r\n            }\r\n            \r\n            if(this.touchDistance >= 0 && slideIndex > 0 && slideIndex <= itemLength - 1 && left >= offsetLeft){\r\n                this.$element.find(this.previous).addClass('active');\r\n                return slideIndex - 1;   \r\n            }else{\r\n                this.$element.find(this.previous).removeClass('active');    \r\n            }            \r\n            \r\n            return slideIndex;\r\n        },\r\n        \r\n        onHandleNextClick: function(e){\r\n            if(!this.options.infiniti && this.slideIndex < this.$item.length - 1){\r\n                this.slideIndex++;    \r\n            }\r\n            \r\n            this.slide();\r\n        },\r\n        \r\n        onHandlePreviousClick: function(e){\r\n            if(!this.options.infiniti && this.slideIndex > 0){\r\n                this.slideIndex--;    \r\n            }\r\n            \r\n            this.slide();\r\n        },\r\n        \r\n        onHandleTouchstart: function(e){\r\n            this.startPos = e.originalEvent.touches[0].pageX;\r\n            e.preventDefault();\r\n        },\r\n        \r\n        onHandleTouchend: function(e){\r\n            this.slide();\r\n        },\r\n        \r\n        onHandleTouchmove: function(e){\r\n            var touch = e.originalEvent.touches[0];\r\n            this.touchDistance = touch.pageX - this.startPos;\r\n            this.slideIndex = this.touchmove({x: touch.pageX, y: touch.pageY});\r\n            e.preventDefault();\r\n        },\r\n        \r\n        onHandleDrag: function(e){\r\n            e.preventDefault();\r\n        },\r\n        \r\n        onHandleMousedown: function(e){\r\n            this.isMouseDown = true;\r\n            this.startPos = e.pageX;\r\n                                \r\n            this.$element.addClass('grabbing');\r\n            this.$element.removeClass('grab');\r\n                \r\n            e.preventDefault();\r\n            \r\n            //console.log('mousedown');\r\n        },\r\n        \r\n        onHandleMouseup: function(e){\r\n            this.isMouseDown = false;\r\n            this.startPos = e.pageX;\r\n                \r\n            this.$element.removeClass('grabbing');\r\n            this.$element.addClass('grab');\r\n                \r\n            if(!this.isMouseUp){\r\n                return false;\r\n            }\r\n                \r\n            this.isMouseUp = false;\r\n                \r\n            this.$item.removeClass('active');\r\n            this.$item.eq(this.slideIndex).addClass('active'); \r\n                                \r\n            this.slide();\r\n            \r\n            //console.log('mouseup');\r\n        },\r\n        \r\n        onHandleMouseout: function(e){\r\n            $(e.target).trigger('mouseup');\r\n            \r\n            //console.log('mouseout');\r\n        },\r\n        \r\n        onHandleMousemove: function(e){\r\n            if(!this.isMouseDown){\r\n                return false;\r\n            }\r\n            \r\n            this.touchDistance = e.pageX - this.startPos;\r\n            this.slideIndex = this.touchmove({x: e.pageX, y: e.pageY});\r\n            this.isMouseUp = true;\r\n            \r\n            e.preventDefault();\r\n            \r\n            //console.log('mousemove');\r\n        },\r\n        \r\n        bindMethods: function(){\r\n            this.onHandleNextClick = bind(this.onHandleNextClick, this);\r\n            this.onHandlePreviousClick = bind(this.onHandlePreviousClick, this); \r\n            this.onHandleTouchstart = bind(this.onHandleTouchstart, this);   \r\n            this.onHandleTouchend = bind(this.onHandleTouchend, this);\r\n            this.onHandleTouchmove = bind(this.onHandleTouchmove, this);\r\n            this.onHandleDrag = bind(this.onHandleDrag, this);\r\n            this.onHandleMousedown = bind(this.onHandleMousedown, this);\r\n            this.onHandleMouseup = bind(this.onHandleMouseup, this);\r\n            this.onHandleMouseout = bind(this.onHandleMouseout, this);\r\n            this.onHandleMousemove = bind(this.onHandleMousemove, this); \r\n        },\r\n        \r\n        bindEventListeners: function(){\r\n            addEventListener(this.$next, 'click', this.onHandleNextClick);\r\n            addEventListener(this.$previous, 'click', this.onHandlePreviousClick);\r\n            \r\n            if(this.options.animateType == 'slide'){\r\n                this.$element.addClass('grab');\r\n                \r\n                addEventListener(this.$wrap, 'touchstart', this.onHandleTouchstart);\r\n                addEventListener(this.$wrap, 'touchend', this.onHandleTouchend);\r\n                addEventListener(this.$wrap, 'touchmove', this.onHandleTouchmove);\r\n                addEventListener(this.$wrap, 'drag', this.onHandleDrag);\r\n                addEventListener(this.$wrap, 'mousedown', this.onHandleMousedown);\r\n                addEventListener(this.$wrap, 'mouseup', this.onHandleMouseup);\r\n                addEventListener(this.$wrap, 'mouseout', this.onHandleMouseout);\r\n                addEventListener(this.$wrap, 'mousemove', this.onHandleMousemove);\r\n            }\r\n        }\r\n    };\r\n\r\n    $.fn[happyslider] = function ( options ) {\r\n        \r\n        // global events\r\n        onWindowResize = bind(onWindowResize, this); \r\n        addEventListener($(window), 'load', onWindowResize); \r\n        addEventListener($(window), 'resize', onWindowResize);\r\n        \r\n        return this.each(function () {\r\n            if (!$.data(this, \"plugin_\" + happyslider)) {\r\n                $.data(this, \"plugin_\" + happyslider, new Plugin( this, options ));\r\n            }\r\n        });\r\n    };\r\n    \r\n    function onWindowResize(e){\r\n        this.each(function () {\r\n            $.data(this, \"plugin_\" + happyslider).draw();    \r\n        });\r\n    }\r\n    \r\n    function bind(fn, context) {\r\n        return function() {\r\n            return fn.apply(context, arguments);\r\n        };\r\n    };\r\n        \r\n    function addEventListener(element, type, callback) {\r\n        element.on(type, callback);\r\n    };\r\n        \r\n    function removeEventListener(element, type, callback) {\r\n        element.off(type, callback);\r\n    };\r\n    \r\n    function dataInit(){\r\n        if($('[data-happyslider]').length > 0){\r\n            $('[data-happyslider]').happyslider();\r\n        }\r\n    }\r\n\r\n    /*http://stackoverflow.com/questions/10964966/detect-ie-version-in-javascript*/\r\n    function isIE(){\r\n        var myNav = navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : false;\r\n    }\r\n    \r\n    $(function() {\r\n        dataInit();\r\n    });\r\n\r\n}));"],"sourceRoot":"/source/"}